!function(){"use strict";let e,t,r,a,s,n,i;let o=(e,...t)=>{let r=e;return t.length>0&&(r+=` :: ${JSON.stringify(t)}`),r};class l extends Error{details;constructor(e,t){super(o(e,t)),this.name=e,this.details=t}}let c=e=>new URL(String(e),location.href).href.replace(RegExp(`^${location.origin}`),""),h={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"serwist",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[h.prefix,e,h.suffix].filter(e=>e&&e.length>0).join("-"),d=e=>{for(let t of Object.keys(h))e(t)},f=e=>{d(t=>{let r=e[t];"string"==typeof r&&(h[t]=r)})},y=e=>e||u(h.googleAnalytics),w=e=>e||u(h.precache),p=e=>e||u(h.runtime);class g{promise;resolve;reject;constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}function m(e,t){let r=new URL(e);for(let e of t)r.searchParams.delete(e);return r.href}async function _(e,t,r,a){let s=m(t.url,r);if(t.url===s)return e.match(t,a);let n={...a,ignoreSearch:!0};for(let i of(await e.keys(t,n)))if(s===m(i.url,r))return e.match(i,a)}let v=new Set,b=async()=>{for(let e of v)await e()};function q(e){return new Promise(t=>setTimeout(t,e))}let R="-precache-",E=async(e,t=R)=>{let r=(await self.caches.keys()).filter(r=>r.includes(t)&&r.includes(self.registration.scope)&&r!==e);return await Promise.all(r.map(e=>self.caches.delete(e))),r},C=e=>{self.addEventListener("activate",t=>{t.waitUntil(E(w(e)).then(e=>{}))})},L=()=>{self.addEventListener("activate",()=>self.clients.claim())},D=(e,t)=>{let r=t();return e.waitUntil(r),r},S=(e,t)=>t.some(t=>e instanceof t),T=new WeakMap,k=new WeakMap,P=new WeakMap,I={get(e,t,r){if(e instanceof IDBTransaction){if("done"===t)return T.get(e);if("store"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return U(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function U(e){var a;if(e instanceof IDBRequest)return function(e){let t=new Promise((t,r)=>{let a=()=>{e.removeEventListener("success",s),e.removeEventListener("error",n)},s=()=>{t(U(e.result)),a()},n=()=>{r(e.error),a()};e.addEventListener("success",s),e.addEventListener("error",n)});return P.set(t,e),t}(e);if(k.has(e))return k.get(e);let s="function"==typeof(a=e)?(r||(r=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(a)?function(...e){return a.apply(x(this),e),U(this.request)}:function(...e){return U(a.apply(x(this),e))}:(a instanceof IDBTransaction&&function(e){if(T.has(e))return;let t=new Promise((t,r)=>{let a=()=>{e.removeEventListener("complete",s),e.removeEventListener("error",n),e.removeEventListener("abort",n)},s=()=>{t(),a()},n=()=>{r(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",s),e.addEventListener("error",n),e.addEventListener("abort",n)});T.set(e,t)}(a),S(a,t||(t=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])))?new Proxy(a,I):a;return s!==e&&(k.set(e,s),P.set(s,e)),s}let x=e=>P.get(e),N=["get","getKey","getAll","getAllKeys","count"],K=["put","add","delete","clear"],B=new Map;function A(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t))return;if(B.get(t))return B.get(t);let r=t.replace(/FromIndex$/,""),a=t!==r,s=K.includes(r);if(!(r in(a?IDBIndex:IDBObjectStore).prototype)||!(s||N.includes(r)))return;let n=async function(e,...t){let n=this.transaction(e,s?"readwrite":"readonly"),i=n.store;return a&&(i=i.index(t.shift())),(await Promise.all([i[r](...t),s&&n.done]))[0]};return B.set(t,n),n}I={...n=I,get:(e,t,r)=>A(e,t)||n.get(e,t,r),has:(e,t)=>!!A(e,t)||n.has(e,t)};let O=["continue","continuePrimaryKey","advance"],F={},H=new WeakMap,M=new WeakMap,W={get(e,t){if(!O.includes(t))return e[t];let r=F[t];return r||(r=F[t]=function(...e){H.set(this,M.get(this)[t](...e))}),r}};async function*j(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;let r=new Proxy(t,W);for(M.set(r,t),P.set(r,x(t));t;)yield r,t=await (H.get(r)||t.continue()),H.delete(r)}function $(e,t){return t===Symbol.asyncIterator&&S(e,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===t&&S(e,[IDBIndex,IDBObjectStore])}I={...i=I,get:(e,t,r)=>$(e,t)?j:i.get(e,t,r),has:(e,t)=>$(e,t)||i.has(e,t)};let V=e=>e&&"object"==typeof e?e:{handle:e};class G{handler;match;method;catchHandler;constructor(e,t,r="GET"){this.handler=V(t),this.match=e,this.method=r}setCatchHandler(e){this.catchHandler=V(e)}}class Q extends G{_allowlist;_denylist;constructor(e,{allowlist:t=[/./],denylist:r=[]}={}){super(e=>this._match(e),e),this._allowlist=t,this._denylist=r}_match({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;let r=e.pathname+e.search;for(let e of this._denylist)if(e.test(r))return!1;return!!this._allowlist.some(e=>e.test(r))}}let z=(e,t=[])=>{for(let r of[...e.searchParams.keys()])t.some(e=>e.test(r))&&e.searchParams.delete(r);return e};class J extends G{constructor(e,t,r){super(({url:t})=>{let r=e.exec(t.href);if(r&&(t.origin===location.origin||0===r.index))return r.slice(1)},t,r)}}let X=async(e,t,r)=>{let a=t.map((e,t)=>({index:t,item:e})),s=async e=>{let t=[];for(;;){let s=a.pop();if(!s)return e(t);let n=await r(s.item);t.push({result:n,index:s.index})}},n=Array.from({length:e},()=>new Promise(s));return(await Promise.all(n)).flat().sort((e,t)=>e.index<t.index?-1:1).map(e=>e.result)},Y=()=>{self.__WB_DISABLE_DEV_LOGS=!0};function Z(e){return"string"==typeof e?new Request(e):e}class ee{event;request;url;params;_cacheKeys={};_strategy;_handlerDeferred;_extendLifetimePromises;_plugins;_pluginStateMap;constructor(e,t){for(let r of(this.event=t.event,this.request=t.request,t.url&&(this.url=t.url,this.params=t.params),this._strategy=e,this._handlerDeferred=new g,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map,this._plugins))this._pluginStateMap.set(r,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){let{event:t}=this,r=Z(e),a=await this.getPreloadResponse();if(a)return a;let s=this.hasCallback("fetchDidFail")?r.clone():null;try{for(let e of this.iterateCallbacks("requestWillFetch"))r=await e({request:r.clone(),event:t})}catch(e){if(e instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}let n=r.clone();try{let e;for(let a of(e=await fetch(r,"navigate"===r.mode?void 0:this._strategy.fetchOptions),this.iterateCallbacks("fetchDidSucceed")))e=await a({event:t,request:n,response:e});return e}catch(e){throw s&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:s.clone(),request:n.clone()}),e}}async fetchAndCachePut(e){let t=await this.fetch(e),r=t.clone();return this.waitUntil(this.cachePut(e,r)),t}async cacheMatch(e){let t;let r=Z(e),{cacheName:a,matchOptions:s}=this._strategy,n=await this.getCacheKey(r,"read"),i={...s,cacheName:a};for(let e of(t=await caches.match(n,i),this.iterateCallbacks("cachedResponseWillBeUsed")))t=await e({cacheName:a,matchOptions:s,cachedResponse:t,request:n,event:this.event})||void 0;return t}async cachePut(e,t){let r=Z(e);await q(0);let a=await this.getCacheKey(r,"write");if(!t)throw new l("cache-put-with-no-response",{url:c(a.url)});let s=await this._ensureResponseSafeToCache(t);if(!s)return!1;let{cacheName:n,matchOptions:i}=this._strategy,o=await self.caches.open(n),h=this.hasCallback("cacheDidUpdate"),u=h?await _(o,a.clone(),["__WB_REVISION__"],i):null;try{await o.put(a,h?s.clone():s)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await b(),e}for(let e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:n,oldResponse:u,newResponse:s.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){let r=`${e.url} | ${t}`;if(!this._cacheKeys[r]){let a=e;for(let e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=Z(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[r]=a}return this._cacheKeys[r]}hasCallback(e){for(let t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(let r of this.iterateCallbacks(e))await r(t)}*iterateCallbacks(e){for(let t of this._strategy.plugins)if("function"==typeof t[e]){let r=this._pluginStateMap.get(t),a=a=>{let s={...a,state:r};return t[e](s)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async getPreloadResponse(){if(this.event instanceof FetchEvent&&"navigate"===this.event.request.mode&&"preloadResponse"in this.event)try{let e=await this.event.preloadResponse;if(e)return e}catch(e){}}async _ensureResponseSafeToCache(e){let t=e,r=!1;for(let e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,r=!0,!t)break;return!r&&t&&200!==t.status&&(t=void 0),t}}class et{cacheName;plugins;fetchOptions;matchOptions;constructor(e={}){this.cacheName=p(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){let[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});let t=e.event,r="string"==typeof e.request?new Request(e.request):e.request,a=new ee(this,e.url?{event:t,request:r,url:e.url,params:e.params}:{event:t,request:r}),s=this._getResponse(a,r,t),n=this._awaitComplete(s,a,r,t);return[s,n]}async _getResponse(e,t,r){let a;await e.runCallbacks("handlerWillStart",{event:r,request:t});try{if(a=await this._handle(t,e),void 0===a||"error"===a.type)throw new l("no-response",{url:t.url})}catch(s){if(s instanceof Error){for(let n of e.iterateCallbacks("handlerDidError"))if(void 0!==(a=await n({error:s,event:r,request:t})))break}if(!a)throw s}for(let s of e.iterateCallbacks("handlerWillRespond"))a=await s({event:r,request:t,response:a});return a}async _awaitComplete(e,t,r,a){let s,n;try{s=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:r,response:s}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:r,response:s,error:n}),t.destroy(),n)throw n}}let er={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class ea extends et{_networkTimeoutSeconds;constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(er),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let r;let a=[],s=[];if(this._networkTimeoutSeconds){let{id:n,promise:i}=this._getTimeoutPromise({request:e,logs:a,handler:t});r=n,s.push(i)}let n=this._getNetworkPromise({timeoutId:r,request:e,logs:a,handler:t});s.push(n);let i=await t.waitUntil((async()=>await t.waitUntil(Promise.race(s))||await n)());if(!i)throw new l("no-response",{url:e.url});return i}_getTimeoutPromise({request:e,logs:t,handler:r}){let a;return{promise:new Promise(t=>{a=setTimeout(async()=>{t(await r.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:a}}async _getNetworkPromise({timeoutId:e,request:t,logs:r,handler:a}){let s,n;try{n=await a.fetchAndCachePut(t)}catch(e){e instanceof Error&&(s=e)}return e&&clearTimeout(e),(s||!n)&&(n=await a.cacheMatch(t)),n}}class es extends et{_networkTimeoutSeconds;constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let r,a;try{let r=[t.fetch(e)];if(this._networkTimeoutSeconds){let e=q(1e3*this._networkTimeoutSeconds);r.push(e)}if(!(a=await Promise.race(r)))throw Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(e){e instanceof Error&&(r=e)}if(!a)throw new l("no-response",{url:e.url,error:r});return a}}let en="requests",ei="queueName";class eo{_db=null;async addEntry(e){let t=(await this.getDb()).transaction(en,"readwrite",{durability:"relaxed"});await t.store.add(e),await t.done}async getFirstEntryId(){let e=await this.getDb(),t=await e.transaction(en).store.openCursor();return t?.value.id}async getAllEntriesByQueueName(e){let t=await this.getDb();return await t.getAllFromIndex(en,ei,IDBKeyRange.only(e))||[]}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(en,ei,IDBKeyRange.only(e))}async deleteEntry(e){let t=await this.getDb();await t.delete(en,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){let r=await this.getDb(),a=await r.transaction(en).store.index(ei).openCursor(e,t);return a?.value}async getDb(){return this._db||(this._db=await function(e,t,{blocked:r,upgrade:a,blocking:s,terminated:n}={}){let i=indexedDB.open(e,3),o=U(i);return a&&i.addEventListener("upgradeneeded",e=>{a(U(i.result),e.oldVersion,e.newVersion,U(i.transaction),e)}),r&&i.addEventListener("blocked",e=>r(e.oldVersion,e.newVersion,e)),o.then(e=>{n&&e.addEventListener("close",()=>n()),s&&e.addEventListener("versionchange",e=>s(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}("serwist-background-sync",0,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<3&&e.objectStoreNames.contains(en)&&e.deleteObjectStore(en),e.createObjectStore(en,{autoIncrement:!0,keyPath:"id"}).createIndex(ei,ei,{unique:!1})}}class el{_queueName;_queueDb;constructor(e){this._queueName=e,this._queueDb=new eo}async pushEntry(e){delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){let t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}let ec=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class eh{_requestData;static async fromRequest(e){let t={url:e.url,headers:{}};for(let r of("GET"!==e.method&&(t.body=await e.clone().arrayBuffer()),e.headers.forEach((e,r)=>{t.headers[r]=e}),ec))void 0!==e[r]&&(t[r]=e[r]);return new eh(t)}constructor(e){"navigate"===e.mode&&(e.mode="same-origin"),this._requestData=e}toObject(){let e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new eh(this.toObject())}}let eu="serwist-background-sync",ed=new Set,ef=e=>{let t={request:new eh(e.requestData).toRequest(),timestamp:e.timestamp};return e.metadata&&(t.metadata=e.metadata),t};class ey{_name;_onSync;_maxRetentionTime;_queueStore;_forceSyncFallback;_syncInProgress=!1;_requestsAddedDuringSync=!1;constructor(e,{forceSyncFallback:t,onSync:r,maxRetentionTime:a}={}){if(ed.has(e))throw new l("duplicate-queue-name",{name:e});ed.add(e),this._name=e,this._onSync=r||this.replayRequests,this._maxRetentionTime=a||10080,this._forceSyncFallback=!!t,this._queueStore=new el(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){await this._addRequest(e,"push")}async unshiftRequest(e){await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){let e=await this._queueStore.getAll(),t=Date.now(),r=[];for(let a of e){let e=6e4*this._maxRetentionTime;t-a.timestamp>e?await this._queueStore.deleteEntry(a.id):r.push(ef(a))}return r}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:r=Date.now()},a){let s={requestData:(await eh.fromRequest(e.clone())).toObject(),timestamp:r};switch(t&&(s.metadata=t),a){case"push":await this._queueStore.pushEntry(s);break;case"unshift":await this._queueStore.unshiftEntry(s)}this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){let t;let r=Date.now();switch(e){case"pop":t=await this._queueStore.popEntry();break;case"shift":t=await this._queueStore.shiftEntry()}if(t){let a=6e4*this._maxRetentionTime;return r-t.timestamp>a?this._removeRequest(e):ef(t)}}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone())}catch{throw await this.unshiftRequest(e),new l("queue-replay-failed",{name:this._name})}}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${eu}:${this._name}`)}catch(e){}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",e=>{if(e.tag===`${eu}:${this._name}`){let t=async()=>{let t;this._syncInProgress=!0;try{await this._onSync({queue:this})}catch(e){if(e instanceof Error)throw e}finally{this._requestsAddedDuringSync&&!(t&&!e.lastChance)&&await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):this._onSync({queue:this})}static get _queueNames(){return ed}}class ew{_queue;constructor(e,t){this._queue=new ey(e,t)}async fetchDidFail({request:e}){await this._queue.pushRequest({request:e})}}let ep=async(t,r)=>{let a=null;if(t.url&&(a=new URL(t.url).origin),a!==self.location.origin)throw new l("cross-origin-copy-response",{origin:a});let s=t.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=r?r(n):n,o=!function(){if(void 0===e){let t=new Response("");if("body"in t)try{new Response(t.body),e=!0}catch{e=!1}e=!1}return e}()?await s.blob():s.body;return new Response(o,i)};class eg extends et{_fallbackToNetwork;static defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e};static copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await ep(e):e};constructor(e={}){e.cacheName=w(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(eg.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){let r=await t.getPreloadResponse();return r?r:await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let r;let a=t.params||{};if(this._fallbackToNetwork){let s=a.integrity,n=e.integrity,i=!n||n===s;r=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?n||s:void 0})),s&&i&&"no-cors"!==e.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,r.clone()))}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return r}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();let r=await t.fetch(e);if(!await t.cachePut(e,r.clone()))throw new l("bad-precaching-response",{url:e.url,status:r.status});return r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(let[r,a]of this.plugins.entries())a!==eg.copyRedirectedCacheableResponsesPlugin&&(a===eg.defaultPrecacheCacheabilityPlugin&&(e=r),a.cacheWillUpdate&&t++);0===t?this.plugins.push(eg.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}let em=()=>!!self.registration?.navigationPreload,e_=e=>{em()&&self.addEventListener("activate",t=>{t.waitUntil(self.registration.navigationPreload.enable().then(()=>{e&&self.registration.navigationPreload.setHeaderValue(e)}))})},ev=e=>{f(e)};class eb{updatedURLs=[];notUpdatedURLs=[];handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)};cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:r})=>{if("install"===e.type&&t?.originalRequest&&t.originalRequest instanceof Request){let e=t.originalRequest.url;r?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return r}}let eq=e=>{if(!e)throw new l("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){let t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}let{revision:t,url:r}=e;if(!r)throw new l("add-to-cache-list-unexpected-type",{entry:e});if(!t){let e=new URL(r,location.href);return{cacheKey:e.href,url:e.href}}let a=new URL(r,location.href),s=new URL(r,location.href);return a.searchParams.set("__WB_REVISION__",t),{cacheKey:a.href,url:s.href}},eR=(e,t,r)=>{if("string"==typeof e){let a=new URL(e,location.href);return new G(({url:e})=>e.href===a.href,t,r)}if(e instanceof RegExp)return new J(e,t,r);if("function"==typeof e)return new G(e,t,r);if(e instanceof G)return e;throw new l("unsupported-route-type",{moduleName:"serwist",funcName:"parseRoute",paramName:"capture"})},eE="www.google-analytics.com",eC="www.googletagmanager.com",eL=/^\/(\w+\/)?collect/;"undefined"!=typeof navigator&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent);class eD{_precacheController;constructor({precacheController:e}){this._precacheController=e}cacheKeyWillBeUsed=async({request:e,params:t})=>{let r=t?.cacheKey||this._precacheController.getCacheKeyForURL(e.url);return r?new Request(r,{headers:e.headers}):e}}class eS{_installAndActiveListenersAdded;_concurrentPrecaching;_strategy;_urlsToCacheKeys=new Map;_urlsToCacheModes=new Map;_cacheKeysToIntegrities=new Map;constructor({cacheName:e,plugins:t=[],fallbackToNetwork:r=!0,concurrentPrecaching:a=1}={}){this._concurrentPrecaching=a,this._strategy=new eg({cacheName:w(e),plugins:[...t,new eD({precacheController:this})],fallbackToNetwork:r}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){let t=[];for(let r of e){"string"==typeof r?t.push(r):r&&!r.integrity&&void 0===r.revision&&t.push(r.url);let{cacheKey:e,url:a}=eq(r),s="string"!=typeof r&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==r.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,r.integrity)}this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,s),t.length>0&&console.warn(`Serwist is precaching URLs without revision info: ${t.join(", ")}
