Manifest Projektu: Ting Tong SaaS
Misja

Stworzenie w pełni funkcjonalnej, wydajnej i dopracowanej aplikacji wideo opartej o nowoczesny stos technologiczny (Next.js/React/TypeScript), która wiernie odwzorowuje oryginalną koncepcję, zapewnia doskonałe wrażenia użytkownika (premium UX) i stanowi solidną, skalowalną podstawę do dalszego rozwoju i integracji z pełnoprawnym backendem.

Wizja

Ting Tong ma stać się wiodącą platformą społecznościową opartą na treściach wideo. Obecny prototyp jest kluczowym krokiem w kierunku weryfikacji koncepcji, zebrania opinii i przygotowania do dalszych inwestycji w architekturę produkcyjną oraz wdrożenie w środowisku chmurowym.

Status Projektu (Stan na 2025-08-28)

Rozwiązano pierwotne problemy ze środowiskiem npm.

Aplikacja została w całości przepisana z monolitycznego HTML/CSS/JS na nowoczesny projekt oparty o Next.js i React.

Ukończono migrację kluczowych elementów frontendu (feed, panel konta).

Obecny cel: implementacja komentarzy, panelu admina oraz przygotowanie do integracji z docelowym backendem.

Architektura Projektu

Framework: Next.js (App Router)

Język: TypeScript

Stylizacja: Tailwind CSS + shadcn/ui

Animacje: Framer Motion

Odtwarzanie Wideo: hls.js z fallbackiem do MP4

Backend (tymczasowy): Mock API oparte na Next.js API Routes

Dziennik Zmian
Data	Etap Zakończony	Komentarz
2025-08-28	Faza 1: Migracja Głównego Feedu	Przeniesiono UI i logikę głównego feedu. Zaimplementowano przewijanie slajdów w Framer Motion, ostylowano TopBar/Sidebar/BottomBar w Tailwind CSS. Dodano polubienia (z optymistycznym UI), logowanie/wylogowanie i panel powiadomień z mock API.
2025-08-28	Faza 2: Migracja Panelu Konta	Zaimplementowano panel zarządzania kontem z zakładkami (Profil, Hasło, Usuń Konto). Stworzono API routes. Dodano przesyłanie i przycinanie awatara oraz animacje panelu.
Roadmap
1. Implementacja Systemu Komentarzy

Stworzenie interfejsu modala do wyświetlania/dodawania komentarzy.

Mock endpoint /api/comments do zarządzania komentarzami.

Integracja UI z mock API.

2. Implementacja Panelu Administratora (/admin-panel)

Oddzielny layout i routing.

Funkcje: przeglądanie/usuwanie użytkowników, zarządzanie filmami (CRUD na data.json).

Zabezpieczenie dostępu (rola admina).

3. Pełna Integracja z Backendem (etap docelowy)

Zastąpienie mockowych API routes rzeczywistymi wywołaniami do backendu (NestJS).

Integracja z Firebase Authentication.

Usprawnienie playera wideo (manifesty HLS z serwera transkodującego, adaptacyjny bitrate).
